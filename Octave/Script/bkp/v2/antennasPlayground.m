1
close all;
clear all;
clc;
global f = 4.33e8; % <= Frequência de operação [Hz]
global c = 299792458; % <= Velocidade da luz [m/s]
global lambda = c/f; % <= Comprimento de onda [m]
global k = 2*pi/lambda; % <= Número de onda [rad/m]

function polarplot3d_rE(ant)
  figure('visible', 'off');
  hold on;
  
  ant = toMeshShape(ant);
  rE = ant.E;
  cp = cosd(ant.PHI);
  sp = sind(ant.PHI);
  ct = cosd(ant.THETA);
  st = sind(ant.THETA);
  XX = st.*cp;
  YY = st.*sp;
  ZZ = ct;
  surf(abs(rE).*XX, ...
    abs(rE).*YY, ...
    abs(rE).*ZZ, ...
    abs(rE), ...
    'linestyle', 'none', ...
    'facecolor', 'interp');
  
  set(gcf, 'visible', 'on');
end

function invertedSphere_rE(ant)
  figure('visible', 'off', 'filename', 'Af_invertedSphere');
  hold on;
  
  ant = toMeshShape(ant);
  surf(ant.THETA.*cosd(ant.PHI), ...
    ant.THETA.*sind(ant.PHI), ...
    zeros(ant.N_phi,ant.N_theta), ...
    abs(ant.E), ...
    'linestyle', 'none', ...
    'facecolor', 'interp');
  grid_handles = [ ...
    polar(linspace(0,2*pi,361), 45*ones(1,361)), ...
    polar(linspace(0,2*pi,361), 90*ones(1,361)), ...
    polar(linspace(0,2*pi,361), 135*ones(1,361)), ...
    polar([0 0], [0 180]), ...
    polar([0 pi/4], [0 180]), ...
    polar([0 pi/2], [0 180]), ...
    polar([0 3*pi/4], [0 180]), ...
    polar([0 pi], [0 180]), ...
    polar([0 5*pi/4], [0 180]), ...
    polar([0 3*pi/2], [0 180]), ...
    polar([0 7*pi/4], [0 180])
  ];
  set(grid_handles, 'color', [.5 .5 .5], 'linewidth', 1);
  thick_handles = [
    text(49*cosd(67.5), 49*sind(67.5), "45º", ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(94*cosd(67.5), 94*sind(67.5), "90º", ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(139*cosd(67.5), 139*sind(67.5), "135º", ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(180, 0, "0º"), ...
    text(180*cosd(45), 180*sind(45), "45º", ...
      'verticalalignment', 'bottom'), ...
    text(180*cosd(90), 180*sind(90), "90º", ...
      'verticalalignment', 'bottom'), ...
    text(180*cosd(135), 180*sind(135), "135º", ...
      'horizontalalignment', 'right', ...
      'verticalalignment', 'bottom'), ...
    text(180*cosd(180), 180*sind(180), "180º", ...
      'horizontalalignment', 'right'), ...
    text(180*cosd(225), 180*sind(225), "225º", ...
      'horizontalalignment', 'right', ...
      'verticalalignment', 'top'), ...
    text(180*cosd(270), 180*sind(270), "270º", ...
      'verticalalignment', 'top'), ...
    text(180*cosd(315), 180*sind(315), "315º", ...
      'verticalalignment', 'top')
  ];
  
  colormap('jet');
  colorbar;
  title("rE");
  grid off;
  axis off;
  set(gcf, 'visible', 'on');
end

function polar_Directivity(ant)
  figure('visible', 'off', 'filename', 'Directivity');
  hold on;
  
##  r_grid = 1.2;
##  grid_handles = [ ...
##    polar(linspace(0,2*pi,361), 45*ones(1,361)), ...
##    polar(linspace(0,2*pi,361), 90*ones(1,361)), ...
##    polar(linspace(0,2*pi,361), 135*ones(1,361)), ...
##    polar([0 0], [0 r_grid]), ...
##    polar([0 pi/4], [0 r_grid]), ...
##    polar([0 pi/2], [0 r_grid]), ...
##    polar([0 3*pi/4], [0 r_grid]), ...
##    polar([0 pi], [0 r_grid]), ...
##    polar([0 5*pi/4], [0 r_grid]), ...
##    polar([0 3*pi/2], [0 r_grid]), ...
##    polar([0 7*pi/4], [0 r_grid])
##  ];
##  set(grid_handles, 'color', [.9 .9 .9], 'linewidth', 0.1);
##  thick_handles = [
##    text(49*cosd(67.5), 49*sind(67.5), "45º", ...
##      'horizontalalignment', 'center', ...
##      'verticalalignment', 'bottom'), ...
##    text(94*cosd(67.5), 94*sind(67.5), "90º", ...
##      'horizontalalignment', 'center', ...
##      'verticalalignment', 'bottom'), ...
##    text(139*cosd(67.5), 139*sind(67.5), "135º", ...
##      'horizontalalignment', 'center', ...
##      'verticalalignment', 'bottom'), ...
##    text(r_grid, 0, "0º"), ...
##    text(r_grid*cosd(45), r_grid*sind(45), "45º", ...
##      'verticalalignment', 'bottom'), ...
##    text(r_grid*cosd(90), r_grid*sind(90), "90º", ...
##      'verticalalignment', 'bottom'), ...
##    text(r_grid*cosd(135), r_grid*sind(135), "135º", ...
##      'horizontalalignment', 'right', ...
##      'verticalalignment', 'bottom'), ...
##    text(r_grid*cosd(180), r_grid*sind(180), "180º", ...
##      'horizontalalignment', 'right'), ...
##    text(r_grid*cosd(225), r_grid*sind(225), "225º", ...
##      'horizontalalignment', 'right', ...
##      'verticalalignment', 'top'), ...
##    text(r_grid*cosd(270), r_grid*sind(270), "270º", ...
##      'verticalalignment', 'top'), ...
##    text(r_grid*cosd(315), r_grid*sind(315), "315º", ...
##      'verticalalignment', 'top')
##  ];
  
  ids = ant.THETA==90;
  
  THETA = ant.PHI(ids);
  RHO = abs(ant.E(ids));
##  THETA(ids) *= -1;
##  PHI(ids) = 0;
  h = polar(deg2rad(THETA), RHO);
  set(h, 'color', 'b');
  D = RHO(2:end)-RHO(1:end-1);
  DD = shift(D,-1)-D;
  idsD = find(sign(D) != sign(shift(D,1)));
  if !isempty(idsD)
    idsC = idsD==shift(idsD+1,1);
    idsD(idsC) = [];
    idsDD = idsD(DD(idsD)<0);
    [XDD, YDD] = pol2cart(deg2rad(THETA(idsDD)),RHO(idsDD));
    line(XDD, YDD, 'linestyle', 'none', 'marker', '*', 'color', 'g');
    [XDD, YDD] = pol2cart(deg2rad(THETA(idsDD)),RHO(idsDD)+0.05);
    for i = 1:length(idsDD)
      n = 20*log10(RHO(idsDD(i)));
      n(n*n<1e-2) = 0;
      text(XDD(i), YDD(i), num2str(n,3), ...
        'horizontalalignment', 'center', ...
        'verticalalignment', 'middle');
    end
  end
  
  axis equal;
  axis off;
  grid on;
  xlabel('x');
  ylabel('y');
  set(gcf, 'visible', 'on');
end

ant = idealDipoleAntenna(0.5, -180, 180, 91, 0, 180, 91);
ant = rotateElectricFields(ant, 0, 0);
array = gridArrayConstructor(ant,
  0, 0,
  0, 1, 0,
  0, 10, 0.5,
  0, 180, 41,
  -180, 180, 361);
interpolateElectricField_interp;
##polarplot3d_script(array);
##invertedSphere_rE(array);
polar_Directivity(array);