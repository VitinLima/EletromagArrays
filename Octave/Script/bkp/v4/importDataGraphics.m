disp('Importing data graphical functions');

function quiver3d(ant, field, showIm)
  figure('visible', showIm, 'filename', 'polar3d rE');
  hold on;
  
##  ant = toVectorShape(ant);
  quiver3(ant.k_hat(1,:), ant.k_hat(2,:), ant.k_hat(3,:), field(1,:), field(2,:), field(3,:));
  
  axis equal;
  xlabel('x');
  ylabel('y');
  zlabel('z');
end

function polar3d(ant, field)
  figure('visible', 'off', 'filename', 'polar3d rE');
  hold on;
  
  ant = toMeshShape(ant);
  rE = getfield(ant, field);
  cp = cosd(ant.PHI);
  sp = sind(ant.PHI);
  ct = cosd(ant.THETA);
  st = sind(ant.THETA);
  XX = st.*cp;
  YY = st.*sp;
  ZZ = ct;
  surf(abs(rE).*XX, ...
    abs(rE).*YY, ...
    abs(rE).*ZZ, ...
    abs(rE), ...
    'linestyle', 'none', ...
    'facecolor', 'interp');
  
##  title('polar3d rE');
  axis equal;
  xlabel('x');
  ylabel('y');
  zlabel('z');
  view(45,30);
  set(gcf, 'filename', [ant.Name,' polar 3d rE'])
end

function invertedSphere_rE(ant, showIm)
  figure('visible', showIm, 'filename', 'inverted sphere rE');
  hold on;
  
  ant = toMeshShape(ant);
  
  surf(ant.THETA.*cosd(ant.PHI), ...
    ant.THETA.*sind(ant.PHI), ...
    zeros(ant.N_phi,ant.N_theta), ...
    abs(ant.E), ...
    'linestyle', 'none', ...
    'facecolor', 'interp');
  grid_handles = [ ...
    polar(linspace(0,2*pi,361), 45*ones(1,361)), ...
    polar(linspace(0,2*pi,361), 90*ones(1,361)), ...
    polar(linspace(0,2*pi,361), 135*ones(1,361)), ...
    polar([0 0], [0 180]), ...
    polar([0 pi/4], [0 180]), ...
    polar([0 pi/2], [0 180]), ...
    polar([0 3*pi/4], [0 180]), ...
    polar([0 pi], [0 180]), ...
    polar([0 5*pi/4], [0 180]), ...
    polar([0 3*pi/2], [0 180]), ...
    polar([0 7*pi/4], [0 180])
  ];
  set(grid_handles, 'color', [.5 .5 .5], 'linewidth', 1);
  thick_handles = [
    text(49*cosd(67.5), 49*sind(67.5), "45º", ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(94*cosd(67.5), 94*sind(67.5), "90º", ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(139*cosd(67.5), 139*sind(67.5), "135º", ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(180, 0, "0º"), ...
    text(180*cosd(45), 180*sind(45), "45º", ...
      'verticalalignment', 'bottom'), ...
    text(180*cosd(90), 180*sind(90), "90º", ...
      'verticalalignment', 'bottom'), ...
    text(180*cosd(135), 180*sind(135), "135º", ...
      'horizontalalignment', 'right', ...
      'verticalalignment', 'bottom'), ...
    text(180*cosd(180), 180*sind(180), "180º", ...
      'horizontalalignment', 'right'), ...
    text(180*cosd(225), 180*sind(225), "225º", ...
      'horizontalalignment', 'right', ...
      'verticalalignment', 'top'), ...
    text(180*cosd(270), 180*sind(270), "270º", ...
      'verticalalignment', 'top'), ...
    text(180*cosd(315), 180*sind(315), "315º", ...
      'verticalalignment', 'top')
  ];
  
  colormap('jet');
  colorbar;
##  title("inverted sphere rE");
  set(gcf, 'filename', [ant.Name,' inverted sphere rE'])
  grid off;
  axis off;
end

function polar_Directivity(ant, showIm)
  figure('visible', showIm, 'filename', 'polar directivity');
  hold on;
  
  ant = toVectorShape(ant);
  
  r_grid = 1.3;
  r1 = 1;
  r2 = 1/sqrt(2);
  r3 = 1/sqrt(10);
  grid_handles = [ ...
    polar(linspace(0,2*pi,361), ones(1,361)*r1), ...
    polar(linspace(0,2*pi,361), ones(1,361)*r2), ...
    polar(linspace(0,2*pi,361), ones(1,361)*r3), ...
    polar([0 0], [0 r_grid]), ...
    polar([0 pi/4], [0 r_grid]), ...
    polar([0 pi/2], [0 r_grid]), ...
    polar([0 3*pi/4], [0 r_grid]), ...
    polar([0 pi], [0 r_grid]), ...
    polar([0 5*pi/4], [0 r_grid]), ...
    polar([0 3*pi/2], [0 r_grid]), ...
    polar([0 7*pi/4], [0 r_grid])
  ];
  set(grid_handles, 'color', [.9 .9 .9], 'linewidth', 0.1);
  thick_handles = [
    text(r3*cosd(67.5), r3*sind(67.5), num2str(20*log(r3)), ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(r2*cosd(67.5), r2*sind(67.5), num2str(20*log(r2)), ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(r1*cosd(67.5), r1*sind(67.5), num2str(20*log(r1)), ...
      'horizontalalignment', 'center', ...
      'verticalalignment', 'bottom'), ...
    text(r_grid, 0, "0º"), ...
    text(r_grid*cosd(45), r_grid*sind(45), "45º", ...
      'verticalalignment', 'bottom'), ...
    text(r_grid*cosd(90), r_grid*sind(90), "90º", ...
      'verticalalignment', 'bottom'), ...
    text(r_grid*cosd(135), r_grid*sind(135), "135º", ...
      'horizontalalignment', 'right', ...
      'verticalalignment', 'bottom'), ...
    text(r_grid*cosd(180), r_grid*sind(180), "180º", ...
      'horizontalalignment', 'right'), ...
    text(r_grid*cosd(225), r_grid*sind(225), "225º", ...
      'horizontalalignment', 'right', ...
      'verticalalignment', 'top'), ...
    text(r_grid*cosd(270), r_grid*sind(270), "270º", ...
      'verticalalignment', 'top'), ...
    text(r_grid*cosd(315), r_grid*sind(315), "315º", ...
      'verticalalignment', 'top')
  ];
  
  ids = ant.THETA==90;
  
  THETA = ant.PHI(ids);
  RHO = abs(ant.E(ids));
  h = polar(deg2rad(THETA), RHO);
  set(h, 'color', 'b');
  D = RHO(2:end)-RHO(1:end-1);
  DD = shift(D,-1)-D;
  idsD = find(sign(D) != sign(shift(D,1)));
  if !isempty(idsD)
    idsC = idsD==shift(idsD+1,1);
    idsD(idsC) = [];
    idsDD = idsD(DD(idsD)<0);
    [XDD, YDD] = pol2cart(deg2rad(THETA(idsDD)),RHO(idsDD));
    line(XDD, YDD, 'linestyle', 'none', 'marker', '*', 'color', 'g');
    [XDD, YDD] = pol2cart(deg2rad(THETA(idsDD)),RHO(idsDD)+0.05);
    for i = 1:length(idsDD)
      n = 20*log10(RHO(idsDD(i)));
      n(n*n<1e-2) = 0;
      text(XDD(i), YDD(i), num2str(n,3), ...
        'horizontalalignment', 'center', ...
        'verticalalignment', 'middle');
    end
  end
  
  title('polar directivity');
  axis equal;
  axis off;
  grid on;
  xlabel('x');
  ylabel('y');
end